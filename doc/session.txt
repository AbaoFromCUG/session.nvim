*session.txt*          For NVIM v0.8.0          Last change: 2023 September 21

==============================================================================
Table of Contents                                  *session-table-of-contents*

1. Session.nvim                                         |session-session.nvim|
2. Install                                                   |session-install|
3. Setup                                                       |session-setup|
4. Usage                                                       |session-usage|
  - Hooks                                                |session-usage-hooks|
  - integrate                                        |session-usage-integrate|
5. Acknowledges                                         |session-acknowledges|

==============================================================================
1. Session.nvim                                         *session-session.nvim*


==============================================================================
2. Install                                                   *session-install*

Using packer.nvim <https://github.com/wbthomason/packer.nvim>

>lua
    use {
      "AbaoFromCUG/session.nvim"
    }
<

Using lazy.nvim <https://github.com/folke/lazy.nvim>

>lua
    {
        "AbaoFromCUG/session.nvim"
    }
<


==============================================================================
3. Setup                                                       *session-setup*

Default configuration

>lua
    
    ---@type session.Configuration
    local config = {
        enabled = true,
        hooks = {
            pre_save = {},
            extra_save = {},
            post_save = {},
            pre_restore = {},
            post_restore = {},
        },
    }
    
    require("sesion").setup(config)
<


==============================================================================
4. Usage                                                       *session-usage*


HOOKS                                                    *session-usage-hooks*


HOOKS TYPE ~

- `pre_save` will called before save session
- `extra_save` will called after save session. Hook can return vim cmd which will be called when last reopen session automatically
- `post_save` will called after `extra_save`
- `pre_restore` will called before restore session
- `post_restore` will called after restore session

You can use hook ability via two methods, `setup` and `register`, they are same


SETUP HOOKS ~

>lua
    
    ---@type session.Configuration
    local config = {
        enabled = true,
        hooks = {
            pre_save = {
                my_pre_save = function() 
                    --some code
                end
            },
            extra_save = {
                my_extra_save = function()
                    return [[lua vim.notify("hello")]]
                end,
            },
            post_save = {},
            pre_restore = {},
            post_restore = {},
        },
    }
    
    require("sesion").setup(config)
    
<


REGISTER HOOKS ~

>lua
    local session = require("session")
    session.register_hook("extra_save", "my_extra_save", function()
        return [[lua vim.notify("hello")]]
    end)
    
    session.register_hook("post_restore", "my_post_restore", function()
        vim.notify("world")
    end)
<


INTEGRATE                                            *session-usage-integrate*

**telescope.nvim**

`session.nvim` support integrate with `telescop.nvim`, use `:Telescope session`
to list session

>lua
    local telescope = require("telescope")
    telescope.load_extension("session")
<


==============================================================================
5. Acknowledges                                         *session-acknowledges*

- auto-sesion <https://github.com/rmagatti/auto-session>a powerful and rich with features session manager

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
